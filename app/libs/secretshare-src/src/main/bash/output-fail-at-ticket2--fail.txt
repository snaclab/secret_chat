SecretShare.paranoid(max=null combo.total=1)
Combination: 1 of 1[0, 1, 2, 3, 4, 5] 2583678352258613803960032426345 4506967170475885585854155504042 3504756081936710971964050680547 4950402319819169437340108798735 5046385754866110457395423047727 2694047742421762647703556833970
ERROR
original                                             164087269821434084748564343049809920
dividedby                                                                          1658880
modulus                                                    5735816763073004597640754984037
WARN: trial[0] did not succeed.
Programmer error, no trial correct, list.size=2
Usage:
 split -k <k> -n <n> -sN|-sS secret   [-prime384|-prime192|-primeN] [-d <desc>] [-paranoid <p>] 
  -k <k>        the threshold
  -n <k>        the number of shares to generate
  -sN           the secret as a number, e.g. '124332' or 'bigintcs:01e5ac-787852'
  -sS           the secret as a string, e.g. 'My Secret'
  -d <desc>     description of the secret
  -prime4096    for modulus, use built-in 4096-bit prime
  -prime384     for modulus, use built-in 384-bit prime [default]
  -prime192     for modulus, use built-in 192-bit prime
  -primeAuto    for modulus, use 192, 384, 4096 or a random prime (that is bigger than secret)
  -primeN       same as -primeAuto
  -primeRandom  for modulus, use a random prime (that is bigger than secret)
  -m <modulus>  for modulus, use <modulus>, e.g. '11753999' or 'bigintcs:b35a0f-F89BEC'
  -primeNone    no modulus, do NOT use any modulus
  -paranoid <p> test combine combinations, maximum of <p> tests
com.tiemens.secretshare.exceptions.SecretShareException: Programmer error, no trial correct, list.size=2
	at com.tiemens.secretshare.math.EasyLinearEquation$Trial.pickSuccess(EasyLinearEquation.java:428)
	at com.tiemens.secretshare.math.EasyLinearEquation$Row.divideNormallyOrModulus(EasyLinearEquation.java:643)
	at com.tiemens.secretshare.math.EasyLinearEquation$Row.solveThisRow(EasyLinearEquation.java:559)
	at com.tiemens.secretshare.math.EasyLinearEquation.solve(EasyLinearEquation.java:253)
	at com.tiemens.secretshare.engine.SecretShare.combine(SecretShare.java:420)
	at com.tiemens.secretshare.engine.SecretShare.combineParanoid(SecretShare.java:793)
	at com.tiemens.secretshare.main.cli.MainSplit$SplitInput.output(MainSplit.java:391)
	at com.tiemens.secretshare.main.cli.MainSplit.main(MainSplit.java:52)
	at com.tiemens.secretshare.main.cli.Main.main(Main.java:58)
